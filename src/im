#! /opt/homebrew/Cellar/icarus-verilog/11.0/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/va_math.vpi";
S_0x14b0051b0 .scope module, "instruction_memory_test" "instruction_memory_test" 2 4;
 .timescale -12 -12;
P_0x14b005320 .param/l "INSTRUCTION_SIZE" 0 2 6, +C4<00000000000000000000000000100000>;
P_0x14b005360 .param/l "MEMORY_SIZE" 0 2 7, +C4<00000000000000000000010000000000>;
P_0x14b0053a0 .param/l "WORDSIZE" 0 2 5, +C4<00000000000000000000000001000000>;
v0x14b015ea0_0 .var "addr", 63 0;
v0x14b015f60_0 .net "instruction", 31 0, L_0x14b016010;  1 drivers
S_0x14b005460 .scope module, "uut" "instruction_memory" 2 13, 3 2 0, S_0x14b0051b0;
 .timescale 0 0;
    .port_info 0 /INPUT 64 "addr";
    .port_info 1 /OUTPUT 32 "instruction";
P_0x14b0055d0 .param/l "INSTRUCTION_SIZE" 0 3 4, +C4<00000000000000000000000000100000>;
P_0x14b005610 .param/l "MEMORY_SIZE" 0 3 5, +C4<00000000000000000000010000000000>;
P_0x14b005650 .param/l "WORDSIZE" 0 3 3, +C4<00000000000000000000000001000000>;
L_0x14b016010 .functor BUFZ 32, v0x14b015dc0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x14b005940_0 .net "addr", 63 0, v0x14b015ea0_0;  1 drivers
v0x14b0159e0_0 .net "instruction", 31 0, L_0x14b016010;  alias, 1 drivers
v0x14b015a80 .array "instructions", 0 31, 1023 0;
v0x14b015dc0_0 .var "selected_instruction", 31 0;
v0x14b015a80_0 .array/port v0x14b015a80, 0;
v0x14b015a80_1 .array/port v0x14b015a80, 1;
v0x14b015a80_2 .array/port v0x14b015a80, 2;
E_0x14b005800/0 .event edge, v0x14b005940_0, v0x14b015a80_0, v0x14b015a80_1, v0x14b015a80_2;
v0x14b015a80_3 .array/port v0x14b015a80, 3;
v0x14b015a80_4 .array/port v0x14b015a80, 4;
v0x14b015a80_5 .array/port v0x14b015a80, 5;
v0x14b015a80_6 .array/port v0x14b015a80, 6;
E_0x14b005800/1 .event edge, v0x14b015a80_3, v0x14b015a80_4, v0x14b015a80_5, v0x14b015a80_6;
v0x14b015a80_7 .array/port v0x14b015a80, 7;
v0x14b015a80_8 .array/port v0x14b015a80, 8;
v0x14b015a80_9 .array/port v0x14b015a80, 9;
v0x14b015a80_10 .array/port v0x14b015a80, 10;
E_0x14b005800/2 .event edge, v0x14b015a80_7, v0x14b015a80_8, v0x14b015a80_9, v0x14b015a80_10;
v0x14b015a80_11 .array/port v0x14b015a80, 11;
v0x14b015a80_12 .array/port v0x14b015a80, 12;
v0x14b015a80_13 .array/port v0x14b015a80, 13;
v0x14b015a80_14 .array/port v0x14b015a80, 14;
E_0x14b005800/3 .event edge, v0x14b015a80_11, v0x14b015a80_12, v0x14b015a80_13, v0x14b015a80_14;
v0x14b015a80_15 .array/port v0x14b015a80, 15;
v0x14b015a80_16 .array/port v0x14b015a80, 16;
v0x14b015a80_17 .array/port v0x14b015a80, 17;
v0x14b015a80_18 .array/port v0x14b015a80, 18;
E_0x14b005800/4 .event edge, v0x14b015a80_15, v0x14b015a80_16, v0x14b015a80_17, v0x14b015a80_18;
v0x14b015a80_19 .array/port v0x14b015a80, 19;
v0x14b015a80_20 .array/port v0x14b015a80, 20;
v0x14b015a80_21 .array/port v0x14b015a80, 21;
v0x14b015a80_22 .array/port v0x14b015a80, 22;
E_0x14b005800/5 .event edge, v0x14b015a80_19, v0x14b015a80_20, v0x14b015a80_21, v0x14b015a80_22;
v0x14b015a80_23 .array/port v0x14b015a80, 23;
v0x14b015a80_24 .array/port v0x14b015a80, 24;
v0x14b015a80_25 .array/port v0x14b015a80, 25;
v0x14b015a80_26 .array/port v0x14b015a80, 26;
E_0x14b005800/6 .event edge, v0x14b015a80_23, v0x14b015a80_24, v0x14b015a80_25, v0x14b015a80_26;
v0x14b015a80_27 .array/port v0x14b015a80, 27;
v0x14b015a80_28 .array/port v0x14b015a80, 28;
v0x14b015a80_29 .array/port v0x14b015a80, 29;
v0x14b015a80_30 .array/port v0x14b015a80, 30;
E_0x14b005800/7 .event edge, v0x14b015a80_27, v0x14b015a80_28, v0x14b015a80_29, v0x14b015a80_30;
v0x14b015a80_31 .array/port v0x14b015a80, 31;
E_0x14b005800/8 .event edge, v0x14b015a80_31;
E_0x14b005800 .event/or E_0x14b005800/0, E_0x14b005800/1, E_0x14b005800/2, E_0x14b005800/3, E_0x14b005800/4, E_0x14b005800/5, E_0x14b005800/6, E_0x14b005800/7, E_0x14b005800/8;
    .scope S_0x14b005460;
T_0 ;
    %vpi_call 3 16 "$readmemb", "instruction_memory_archive.txt", v0x14b015a80, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000000000011 {0 0 0};
    %end;
    .thread T_0;
    .scope S_0x14b005460;
T_1 ;
    %wait E_0x14b005800;
    %ix/getv 4, v0x14b005940_0;
    %load/vec4a v0x14b015a80, 4;
    %pad/u 32;
    %store/vec4 v0x14b015dc0_0, 0, 32;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0x14b0051b0;
T_2 ;
    %vpi_call 2 20 "$monitor", "--INSTRUCTION MEMORY TEST BEGIN--" {0 0 0};
    %delay 100, 0;
    %pushi/vec4 0, 0, 64;
    %store/vec4 v0x14b015ea0_0, 0, 64;
    %vpi_call 2 24 "$monitor", "addr = %H; instruction = %B", v0x14b015ea0_0, v0x14b015f60_0 {0 0 0};
    %delay 100, 0;
    %pushi/vec4 1, 0, 64;
    %store/vec4 v0x14b015ea0_0, 0, 64;
    %vpi_call 2 28 "$monitor", "addr = %H; instruction = %B", v0x14b015ea0_0, v0x14b015f60_0 {0 0 0};
    %delay 100, 0;
    %pushi/vec4 2, 0, 64;
    %store/vec4 v0x14b015ea0_0, 0, 64;
    %vpi_call 2 32 "$monitor", "addr = %H; instruction = %B", v0x14b015ea0_0, v0x14b015f60_0 {0 0 0};
    %delay 100, 0;
    %vpi_call 2 35 "$monitor", "--INSTRUCTION MEMORY TEST END--" {0 0 0};
    %delay 100, 0;
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "../src/testbenchs/tests/processor/instruction_memory_test.v";
    "../src/modules/processor/instruction_memory.v";
